/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cocktail1;

import Fruit.*;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author 97259
 */
public class CocktailGUI extends javax.swing.JFrame {

    /**
     * Creates new form CocktailGUI
     */
    
    ArrayList<String> cups = new ArrayList<>();
    
    FileOutputStream fos = null; 
    DataOutputStream dos = null;

        
    public CocktailGUI() {
        initComponents();
    }        
    Scanner file = null;
    Blender blender = new Blender();
    Cup cup = new Cup();
    boolean blendDetector = false;
    boolean []ingredientsDetector = {false,false};
    boolean capacityDetector = false;
    int PourCounter=1;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        Milk = new javax.swing.JSpinner();
        BlenderCap = new javax.swing.JSpinner();
        jSeparator3 = new javax.swing.JSeparator();
        Strawberry = new javax.swing.JSpinner();
        Orange = new javax.swing.JSpinner();
        Mango = new javax.swing.JSpinner();
        Banana = new javax.swing.JSpinner();
        Watermelon = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Pour = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Blend = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        CupCap = new javax.swing.JSpinner();
        jSeparator4 = new javax.swing.JSeparator();
        Sugar = new javax.swing.JCheckBox();
        Set = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        Reset = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        BlenderInfo = new javax.swing.JTextArea();
        panel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CupInfo = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        Read = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CUP");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 50, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cocktail1/cockta.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 480, 750));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, 0, 100));

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("BANANA");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 80, 20));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 122, 520, -1));

        Milk.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jPanel1.add(Milk, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 320, 60, -1));

        BlenderCap.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jPanel1.add(BlenderCap, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 60, 70, -1));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 490, 510, -1));

        Strawberry.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jPanel1.add(Strawberry, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 260, 60, -1));

        Orange.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jPanel1.add(Orange, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 260, 60, -1));

        Mango.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jPanel1.add(Mango, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 260, 60, -1));

        Banana.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jPanel1.add(Banana, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, 60, -1));

        Watermelon.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jPanel1.add(Watermelon, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 260, 70, -1));

        jLabel18.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("MANGO");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 220, -1, 20));

        jLabel19.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("ORANGE");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 220, -1, 20));

        jLabel20.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("STRAWBERRY");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 220, -1, 20));

        jLabel17.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("FRUITS");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 180, -1, -1));

        jLabel21.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("WATERMELON");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 220, -1, 20));

        Pour.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        Pour.setText("POUR");
        Pour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PourActionPerformed(evt);
            }
        });
        jPanel1.add(Pour, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 440, -1, -1));

        Add.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        Add.setText("ADD INGREDIENTS");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        jPanel1.add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 440, 180, -1));

        Blend.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        Blend.setText("BLEND");
        Blend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlendActionPerformed(evt);
            }
        });
        jPanel1.add(Blend, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 440, -1, -1));

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("BLENDER");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, -1, -1));

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("MILK");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 320, -1, -1));

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("SUGAR");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 370, -1, -1));

        jLabel11.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("INGREDIENTS");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, -1, -1));

        CupCap.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jPanel1.add(CupCap, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 60, 70, -1));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 174, 210, -1));

        Sugar.setBackground(new java.awt.Color(0, 0, 51));
        Sugar.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        Sugar.setForeground(new java.awt.Color(240, 240, 240));
        Sugar.setText("SUGAR");
        jPanel1.add(Sugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 380, 20, 20));

        Set.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        Set.setText("SET");
        Set.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetActionPerformed(evt);
            }
        });
        jPanel1.add(Set, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 60, -1, -1));

        jLabel16.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("CAPACITY");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, -1, -1));

        Reset.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        Reset.setText("RESET");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });
        jPanel1.add(Reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 649, 90, 70));

        jTabbedPane1.setBackground(new java.awt.Color(240, 240, 0));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N

        BlenderInfo.setColumns(20);
        BlenderInfo.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        BlenderInfo.setRows(5);
        jScrollPane3.setViewportView(BlenderInfo);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("BLENDER", panel1);

        CupInfo.setColumns(20);
        CupInfo.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        CupInfo.setRows(5);
        jScrollPane2.setViewportView(CupInfo);

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("CUP", panel2);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 500, 530, 240));

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("CAPACITY");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, -1, -1));

        Read.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        Read.setText("READ AND ADD FROM input.txt FILE");
        Read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReadActionPerformed(evt);
            }
        });
        jPanel1.add(Read, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 350, -1, 60));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cocktail1/Rectangle 1.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 650, 750));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cocktail1/Rectangle.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, 0, 660, 750));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 260, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1069, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        if(blender.getCapacity()<= 0) {
            JOptionPane.showMessageDialog(this,"Set blender capacity");
            return;
        }
            
        if(cup.getCapacity()<=0) {
            JOptionPane.showMessageDialog(this,"Set cup capacity");
            return;
        }
        
        if(blender.getVolume() == 0) {
            ingredientsDetector[0] = ingredientsDetector[1] = false;
        }
            
        int bananaVol = (Integer) Banana.getValue();
        int mangoVol = (Integer) Mango.getValue();
        int orangeVol = (Integer) Orange.getValue();
        int strawberryVol = (Integer) Strawberry.getValue();
        int watermelonVol = (Integer) Watermelon.getValue();
        double milkVol =(Integer) Milk.getValue();
        double totalVolume = bananaVol + mangoVol + orangeVol + strawberryVol + watermelonVol + milkVol;
        if(totalVolume > blender.getCapacity() - blender.getVolume()) {
            JOptionPane.showMessageDialog(this,"No enough space in the blender");
            return;
        }
            
        if (bananaVol > 0){
            blender.Add(new Banana(bananaVol));
            ingredientsDetector[0] = true;
        }
        if (mangoVol > 0){
            blender.Add(new Mango(mangoVol));
            ingredientsDetector[0] = true;
        }
        if (orangeVol > 0){
            blender.Add(new Orange(orangeVol));
            ingredientsDetector[0] = true;
        }
        if (strawberryVol > 0){
            blender.Add(new Strawberry(strawberryVol));
            ingredientsDetector[0] = true;
        }
        if (watermelonVol > 0){
            blender.Add(new Watermelon(watermelonVol));
            ingredientsDetector[0] = true;
        }                
        if (milkVol>0)    {
            blender.add(new Milk(milkVol));
            ingredientsDetector[1] = true;
        }       
        if (Sugar.isSelected()) 
            blender.add(new Sugar());
   
        Banana.setValue(0);
        Mango.setValue(0);
        Orange.setValue(0);       
        Strawberry.setValue(0);
        Watermelon.setValue(0);
        Milk.setValue(0);
        Sugar.setSelected(false);

    }//GEN-LAST:event_AddActionPerformed

    private void SetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetActionPerformed
        if((Integer)BlenderCap.getValue()<= 0 || (Integer)CupCap.getValue()<= 0)
            JOptionPane.showMessageDialog(this,"Enter a positive capacity");
        else {
            int BlenderCapacity = (Integer) BlenderCap.getValue();
            int CupCapacity = (Integer) CupCap.getValue();
            blender.setCapacity(BlenderCapacity);
            cup.setCapacity(CupCapacity);
            Set.setEnabled(false);
            Set.setText("Done");
            capacityDetector = true;
        }
    }//GEN-LAST:event_SetActionPerformed

    private void BlendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlendActionPerformed
        if (!capacityDetector) {
            JOptionPane.showMessageDialog(this,"Set the capacity for both cup and blender!!");
            return;
        }
        
        if (!ingredientsDetector[0] || ! ingredientsDetector[1]) {
            JOptionPane.showMessageDialog(this,"the blender should contain both milk and fruit!!");
            return;
        }
        
        try{
            fos = new FileOutputStream("output.txt", true);
            dos = new DataOutputStream(fos);
            dos.writeBytes("\n" + blender.printIngredients());
        } 
        catch (FileNotFoundException e){
            JOptionPane.showMessageDialog(this, e.toString());
        } 
        catch (IOException ex) {
            ex.printStackTrace();
        }
     

        blender.Blend();
        BlenderInfo.setText(blender.getInfo());
        blendDetector = true;
            
        int r = blender.getColorBlender().getR();
        int g = blender.getColorBlender().getG();
        int b = blender.getColorBlender().getB();
            
        BlenderInfo.setBackground(new java.awt.Color(r, g, b));    
        
        try{
            dos.writeBytes("\n" + blender.getInfo());
        } 
        catch (FileNotFoundException e){
            JOptionPane.showMessageDialog(this, e.toString());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
        finally {
            if(dos != null)
            try {
                dos.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
        }
        
        
        
    }//GEN-LAST:event_BlendActionPerformed

    private void PourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PourActionPerformed
        
        if(!blendDetector) {
            JOptionPane.showMessageDialog(this,"Blend before pour");
            return;
        }
        if(blender.getVolume() == 0) {
            JOptionPane.showMessageDialog(this,"The blender is empty!");
            return;
        }
        
        cup.setColorcup(blender.getColorBlender());
        blender.Pour(cup);
        cups.add(cup.getInfo());
        
        String cupsInfo = "";
        for(String str: cups) {
            cupsInfo += str + "\n";
        }
        CupInfo.setText(cupsInfo);
        BlenderInfo.setText(blender.getInfo());
        
        if(blender.getVolume() == 0){
            BlenderInfo.setBackground(new java.awt.Color(255, 255, 255));
            BlenderInfo.setText(blender.getInfo());
        } 
        
        try{
            fos = new FileOutputStream("cups.txt", true);
            dos = new DataOutputStream(fos);
            dos.writeBytes("\nCup: " + cups.get(cups.size() - 1));
            dos.writeBytes("\nBlender after pour #" +PourCounter+": "+ blender.getInfo());
            PourCounter++;
        } 
        catch (FileNotFoundException e){
            JOptionPane.showMessageDialog(this, e.toString());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
        finally {
            if(dos != null)
            try {
                dos.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_PourActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        Banana.setValue(0);
        Mango.setValue(0);
        Orange.setValue(0);       
        Strawberry.setValue(0);
        Watermelon.setValue(0);
        Milk.setValue(0);
        Milk.setValue(0);
        Sugar.setSelected(false);
        BlenderCap.setValue(0);
        CupCap.setValue(0);
        blender.setVolume(0);
        blender.setCapacity(0);
        cup.setVolume(0);
        cup.setCalories(0);
        cup.setCapacity(0);
        CupInfo.setText("");
        BlenderInfo.setText("");
        Set.setEnabled(true);
        Set.setText("Set");
        Add.setEnabled(true);
        ingredientsDetector[0] = false;
        ingredientsDetector[1] = false;
        blendDetector = false;
        blender.ingredients.removeAll(blender.ingredients);
        Blend.setEnabled(true);
        Pour.setEnabled(true);
        cups.removeAll(cups);
        BlenderInfo.setBackground(java.awt.Color.WHITE);
    }//GEN-LAST:event_ResetActionPerformed

    private void ReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReadActionPerformed

        Scanner in = new Scanner(System.in); 
        try{

            file = new Scanner(new File("input.txt"));
            double temp;
            boolean BlenderDetector = false;
            boolean CupDetector = false;
            do{
                switch(file.next()){
                    case "Blender": case "blender":
                        temp= Double.parseDouble(file.next());
                        if(temp>0) {
                            blender.setCapacity(temp);
                            BlenderCap.setValue(temp);  
                            BlenderDetector = true;
                        }                                                           
                        break;
                                                            
                    case "Cup": case "cup":
                        temp= Double.parseDouble(file.next());
                        if(temp>0) {
                            cup.setCapacity(temp);
                            CupCap.setValue(temp);
                            CupDetector=true;
                        }
                        break;
                    case "banana": case "Banana": 
                        temp= Double.parseDouble(file.next());
                        if(temp>0) {
                            Banana.setValue(temp);
                            Fruits fruit2=new Banana(temp);
                            blender.Add(fruit2);
                            ingredientsDetector[0] =true;}
                        break;
                    case "Mango": case "mango":
                        temp= Double.parseDouble(file.next());
                        if(temp>0) {
                            Mango.setValue(temp);
                            Fruits fruit3=new Mango(temp);
                            blender.Add(fruit3);
                            ingredientsDetector[0]=true;
                        }
                    break;
                case "Orange": case "orange":   
                    temp= Double.parseDouble(file.next());
                        if(temp>0) {
                            Orange.setValue(temp);
                            Fruits fruit4=new Orange(temp);
                            blender.Add(fruit4);
                            ingredientsDetector[0]=true;
                        }
                    break;
                case "Watermelon": case "watermelon":
                    temp= Double.parseDouble(file.next());
                    if(temp>0) {
                        Watermelon.setValue(temp);
                        Fruits fruit6=new Watermelon(temp);
                        blender.Add(fruit6);
                        ingredientsDetector[0]=true;
                    }
                    break;
                case "Strawberry": case "strawberry":   
                    temp= Double.parseDouble(file.next());
                    if(temp>0) {
                        Strawberry.setValue(temp);
                        Fruits fruit7=new Strawberry(temp);
                        blender.Add(fruit7);
                        ingredientsDetector[0]=true;
                    }
                    break;
                case "Milk": case "milk":
                    temp= Double.parseDouble(file.next());
                        if(temp>0) {
                            Milk.setValue(temp);
                            Milk milk=new Milk(temp);
                            blender.add(milk);
                            ingredientsDetector[1]=true;
                        }
                    break;
                case "Sugar": case "sugar":
                        blender.add(new Sugar());
                            Sugar.setSelected(true);            
                break;
            }
        } while(file.hasNext());
        if(BlenderDetector && CupDetector)
            capacityDetector = true;
        Set.setEnabled(false);
        Set.setText("Done");
        Add.setEnabled(false);
    } 
    catch (FileNotFoundException e){
        JOptionPane.showMessageDialog(this, e.toString());
    }
        
    

    }//GEN-LAST:event_ReadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        DataOutputStream dos = null;
        FileOutputStream fos = null;       
        Scanner in = new Scanner(System.in);
        Scanner file = null;
        try{
        fos = new    FileOutputStream("output.txt");
        dos = new DataOutputStream(fos);
        file = new Scanner(new File("input.txt"));
        } catch (Exception e){
            e.printStackTrace();
        }
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CocktailGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CocktailGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CocktailGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CocktailGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new CocktailGUI().setVisible(true);
                
                
                }});}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JSpinner Banana;
    private javax.swing.JButton Blend;
    private javax.swing.JSpinner BlenderCap;
    private javax.swing.JTextArea BlenderInfo;
    private javax.swing.JSpinner CupCap;
    private javax.swing.JTextArea CupInfo;
    private javax.swing.JSpinner Mango;
    private javax.swing.JSpinner Milk;
    private javax.swing.JSpinner Orange;
    private javax.swing.JButton Pour;
    private javax.swing.JButton Read;
    private javax.swing.JButton Reset;
    private javax.swing.JButton Set;
    private javax.swing.JSpinner Strawberry;
    private javax.swing.JCheckBox Sugar;
    private javax.swing.JSpinner Watermelon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    // End of variables declaration//GEN-END:variables
}
